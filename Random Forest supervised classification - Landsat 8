###Random Forest supervised classification of Landsat 8 imagery
###Oslofjord study site
### Sentinel4Nature project
###Author: Megan Nowell

##Set up workspace
#Libraries
library(sp)
library(rgdal)
library(raster)
library(maptools)

#Set working directory
setwd("C:/...")
untar("LC81980182015327LGN00.tar.gz")
list.files(pattern = glob2rx('*.tif'), full.names=TRUE)

##Prepare raster
red <- raster("./LC81980182015327LGN00_B4.tif")
NIR <- raster("./LC81980182015327LGN00_B5.tif")
blue <- raster("./LC81980182015327LGN00_B2.tif")
green <- raster("./LC81980182015327LGN00_B3.tif")

#Crop each band
c <- readOGR(dsn="of_studyarea_100m.shp", layer="of_studyarea_100m")
cRed <- crop(red, c)
cNIR <- crop(NIR, c)
cBlue <- crop(blue, c)
cGreen <- crop(green, c)

#Check plot
plot(cRed)
plot(cNIR)
plot(cBlue)
plot(cGreen)

#Stack and write raster
L8 <- brick(cRed, cNIR, cBlue, cGreen)
writeRaster(s2, "L8.tif", datatype = "INT2S", overwrite = TRUE, bylayer =FALSE)

#Check raster
plotRGB(L8,r=3, g=2, b=1, stretch="Lin")
extent(L8)
raster(L8)
hist(L8)
pairs(L8)

##Raster classification
#NDVI
cNDVI <- (cNIR-cRed)/(cNIR+cRed)

#Project raster as UTM 33N (http://spatialreference.org/ref/epsg/25833/proj4/)
utm33 <- "+proj=utm +zone=33 +ellps=GRS80 +units=m +no_defs "
NDVI <- projectRaster(cNDVI, crs=utm33)
L8_proj <- projectRaster(L8, crs=utm33)
writeRaster(NDVI, "of_NDVI.tif", datatype="INT2S", overwrite =TRUE, bylayer=FALSE)

#Check
raster(NDVI)
plot(NDVI)
raster(L8_proj)
plot(L8_proj)

#Combine NDVI and raster brick
covs <- addLayer(L8_proj, NDVI)
plot(covs)
names(covs) <- c("band4", "band5", "band2", "band3", "NDVI")
plot(covs)

###Prepare training classes
##Create training classes using NDVI
#Add training classes
trainingClasses <- readOGR(dsn="of_training_classes.shp", layer="of_training_classes")
summary(trainingClasses)
tClasses <- spTransform(trainingClasses, CRS("+proj=utm +zone=33 +ellps=GRS80 +units=m +no_defs"))
summary(tClasses)

#Add shapefile to raster plot
plot(NDVI)
plot(tClasses, add=TRUE)
tClasses@data

#Convert class to numeric value
tClasses@data$descriptio
str(tClasses@data$descriptio)
tClasses@data$code <- as.numeric(tClasses@data$descriptio)
tClasses@data

#Rasterize
classes <- rasterize(tClasses, NDVI, field='code')
colors <- c("dark green", "orange", "purple", "yellow", "red", "green", "light gray", "dark gray", "light blue", "light green", "dark blue")
plot(classes, col=colors, legend=FALSE)
legend("bottomleft", legend=c("dense forest", "development", "grassland", "lawn", "low veg", "medium forest", "road", "rock", "shallow water", "sparse forest", "water"), fill=colors, bg="white")

#Mask image
covmasked <- mask(covs, classes)
plot(covmasked)

#Combine classes layer with input training dataset
names(classes) <- "class"
trainingbrick <- addLayer(covmasked, classes)
plot(trainingbrick)

#Extract all values into a matrix
valuetable <- getValues(trainingbrick)
valuetable <- na.omit(valuetable)
valuetable <- as.data.frame(valuetable)
head(valuetable, n=10)
tail(valuetable, n=10)

#Visualize distribution of covariates
valuetable$class <- factor(valuetable$class, levels = c(1:11))
val_dforest <- subset(valuetable, class == 1)
val_dev  <- subset(valuetable, class == 2)
val_grass  <- subset(valuetable, class == 4)
val_lawn  <- subset(valuetable, class == 3)
val_lveg<- subset(valuetable, class == 5)
val_mforest  <- subset(valuetable, class == 6)
val_road  <- subset(valuetable, class == 7)
val_rock  <- subset(valuetable, class == 8)
val_swater  <- subset(valuetable, class == 9)
val_sforest  <- subset(valuetable, class == 10)
val_water  <- subset(valuetable, class == 11)


###Supervised classification: Random Forest
#Set library
library(randomForest)

#Check data
summary(valuetable)
head(valuetable, n=20)

#Run model
modelRF <- randomForest(x=valuetable[ ,c(1:5)], y=valuetable$class, importance=TRUE)

#Inspect model
modelRF
class(modelRF)
str(modelRF)
names(modelRF)

#Confusion matrix
colnames(modelRF$confusion) <- c("dense forest", "development", "grassland", "lawn", "low veg", "medium forest", "road", "rock", "shallow water", "sparse forest", "water", "class.error")
rownames(modelRF$confusion) <- c("dense forest", "development", "grassland", "lawn", "low veg", "medium forest", "road", "rock", "shallow water", "sparse forest", "water")
modelRF$confusion

#Statistical importance of each of the covariates
varImpPlot(modelRF)

#Check names
names(covs)
names(valuetable)

#Predict land cover
predLC <- predict(covs, model=modelRF, na.rm=TRUE)

#Plot the results
cols <- c("dark green", "orange", "purple", "yellow", "red", "green", "light gray", "dark gray", "light blue", "light green", "dark blue")
plot(predLC, col=cols, legend=FALSE)
legend("bottomright", legend=c("dense forest", "development", "grassland", "lawn", "low veg", "medium forest", "road", "rock", "shallow water", "sparse forest", "water"), fill=cols, bg="white")

#Write raster
writeRaster(predLC, "Landcover_L8.tif", datatype = "INT2S", overwrite = TRUE, bylayer =FALSE)
